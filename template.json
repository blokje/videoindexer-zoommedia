{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "subscriptionId": {
            "type": "string"
        },
        "location": {
            "type": "string"
        },
        "connectionName": {
            "type": "string"
        },
        "logicapp_name": {
            "type": "string"
        },
        "storageAccountName": {
            "type": "string"
        },
        "storageAccountKey": {
            "type": "string"
        },
        "containerName": {
            "type": "string"
        },
        "videoindexerregion": {
            "type": "string"
        },
        "videoindexeraccount": {
            "type": "string"
        },
        "videoindexerkey": {
            "type": "string"
        },
        "zoommediatoken": {
            "type": "string"
        },
        "language": {
            "type": "string"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connectionName')]",
            "apiVersion": "2016-06-01",
            "location": "[parameters('location')]",
            "scale": null,
            "properties": {
                "displayName": "[parameters('storageAccountName')]",
                "parameterValues": {
                    "accountName": "[parameters('storageAccountName')]",
                    "accessKey": "[parameters('storageAccountKey')]"
                },
                "api": {
                    "id": "[concat('/subscriptions/', parameters('subscriptionId'), '/providers/Microsoft.Web/locations/', parameters('location'),'/managedApis/azureblob')]"
                }
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Logic/workflows",
            "name": "[concat(parameters('logicapp_name'), '_1')]",
            "apiVersion": "2017-07-01",
            "location": "[parameters('location')]",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_blob_is_added_or_modified_(properties_only)": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 1
                            },
                            "splitOn": "@triggerBody()",
                            "metadata": {
                                "[base64(concat('%2f', parameters('containerName')))]": "[concat('/', parameters('containerName'))]"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/triggers/batch/onupdatedfile",
                                "queries": {
                                    "folderId": "[base64(concat('%2f', parameters('containerName')))]",
                                    "maxFileCount": 1
                                }
                            }
                        }
                    },
                    "actions": {
                        "Create_SAS_URI_by_path": {
                            "runAfter": {
                                "Initialize_variable:_VideoIndexerKey": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "ExpiryTime": "@{addHours(utcNow(), 6)}",
                                    "Permissions": "Read"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/CreateSharedLinkByPath",
                                "queries": {
                                    "path": "@triggerBody()?['Path']"
                                }
                            }
                        },
                        "HTTP:_Get_token_from_VideoIndexer": {
                            "inputs": {
                                "headers": {
                                    "Ocp-Apim-Subscription-Key": "@variables('VideoIndexerKey')"
                                },
                                "method": "GET",
                                "uri": "https://api.videoindexer.ai/auth/@{encodeUriComponent(variables('VideoIndexerRegion'))}/Accounts/@{encodeUriComponent(variables('VideoIndexerAccount'))}/AccessToken?allowEdit=true"
                            },
                            "runAfter": {
                                "Initialize_variable:_CallbackURL": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "HTTP:_Upload_file_to_VideoIndexer": {
                            "runAfter": {
                                "HTTP:_Get_token_from_VideoIndexer": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "method": "POST",
                                "uri": "https://api.videoindexer.ai/@{encodeUriComponent(variables('VideoIndexerRegion'))}/Accounts/@{encodeUriComponent(variables('VideoIndexerAccount'))}/Videos?accessToken=@{body('HTTP:_Get_token_from_VideoIndexer')}&name=@{encodeUriComponent(triggerBody()['Name'])}&videoUrl=@{encodeUriComponent(body('Create_SAS_URI_by_path')['WebUrl'])}&privacy=Private&callbackUrl=@{encodeUriComponent(variables('CallbackURL'))}"
                            }
                        },
                        "Initialize_variable:_CallbackURL": {
                            "runAfter": {
                                "Create_SAS_URI_by_path": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "CallbackURL",
                                        "type": "String",
                                        "value": "[concat(listCallbackURL(concat(resourceId('Microsoft.Logic/workflows/', concat(parameters('logicapp_name'), '_2')), '/triggers/manual'), '2016-06-01').value, '&url=', '@{encodeUriComponent(body(''Create_SAS_URI_by_path'')?[''WebUrl''])}')]"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable:_VideoIndexerAccount": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "VideoIndexerAccount",
                                        "type": "String",
                                        "value": "[parameters('videoindexeraccount')]"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable:_VideoIndexerRegion": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable:_VideoIndexerKey": {
                            "runAfter": {
                                "Initialize_variable:_VideoIndexerAccount": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "VideoIndexerKey",
                                        "type": "String",
                                        "value": "[parameters('videoindexerkey')]"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable:_VideoIndexerRegion": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "VideoIndexerRegion",
                                        "type": "String",
                                        "value": "[parameters('videoindexerregion')]"
                                    }
                                ]
                            },
                            "runAfter": {},
                            "type": "InitializeVariable"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connectionName'))]",
                                "connectionName": "[parameters('connectionName')]",
                                "id": "[concat('/subscriptions/', parameters('subscriptionId'), '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azureblob')]"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connectionName'))]",
                "[resourceId('Microsoft.Logic/workflows', concat(parameters('logicapp_name'), '_2'))]"                
            ]
        },
        {
            "type": "Microsoft.Logic/workflows",
            "name": "[concat(parameters('logicapp_name'), '_2')]",
            "apiVersion": "2017-07-01",
            "location": "[parameters('location')]",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "HTTP:_Create_session_at_ZoomMedia": {
                            "runAfter": {
                                "Initialize_variable:_CallbackURL": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "body": {
                                    "callback_format": "text/vtt",
                                    "callback_headers": [
                                        "Content-Type: text/plain",
                                        "X-VideoId: @{variables('VideoID')}"
                                    ],
                                    "callback_method": "POST",
                                    "callback_url": "@variables('CallbackURL')",
                                    "language": "[parameters('language')]"
                                },
                                "headers": {
                                    "X-Zoom-S2T-Token": "@variables('ZoomMediaKey')"
                                },
                                "method": "POST",
                                "uri": "https://api.zoommedia.ai/api/v1/speech-to-text/session/"
                            }
                        },
                        "HTTP:_Upload_file_to_ZoomMedia": {
                            "runAfter": {
                                "HTTP:_Create_session_at_ZoomMedia": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "body": {
                                    "video_url": "@variables('VideoURL')"
                                },
                                "headers": {
                                    "X-Zoom-S2T-Token": "@variables('ZoomMediaKey')"
                                },
                                "method": "POST",
                                "uri": "https://api.zoommedia.ai/api/v1/speech-to-text/session/@{body('HTTP:_Create_session_at_ZoomMedia')['sessionId']}"
                            }
                        },
                        "Initialize_variable:_CallbackURL": {
                            "runAfter": {
                                "Initialize_variable:_ZoomMediaKey": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "CallbackURL",
                                        "type": "String",
                                        "value": "[listCallbackURL(concat(resourceId('Microsoft.Logic/workflows/', concat(parameters('logicapp_name'), '_3')), '/triggers/manual'), '2016-06-01').value]"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable:_VideoID": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "VideoID",
                                        "type": "String",
                                        "value": "@{triggerOutputs()['queries']['id']}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable:_VideoURL": {
                            "runAfter": {
                                "Initialize_variable:_VideoID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "VideoURL",
                                        "type": "String",
                                        "value": "@{triggerOutputs()['queries']['url']}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable:_ZoomMediaKey": {
                            "runAfter": {
                                "Initialize_variable:_VideoURL": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ZoomMediaKey",
                                        "type": "String",
                                        "value": "[parameters('zoommediatoken')]"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            },
            "dependsOn": [
                "[resourceId('Microsoft.Logic/workflows', concat(parameters('logicapp_name'), '_3'))]"
            ]
        },
        {
            "type": "Microsoft.Logic/workflows",
            "name": "[concat(parameters('logicapp_name'), '_3')]",
            "apiVersion": "2017-07-01",
            "location": "[parameters('location')]",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "HTTP:_Get_token_from_VideoIndexer": {
                            "inputs": {
                                "headers": {
                                    "Ocp-Apim-Subscription-Key": "@variables('VideoIndexerKey')"
                                },
                                "method": "GET",
                                "uri": "https://api.videoindexer.ai/auth/@{variables('VideoIndexerRegion')}/Accounts/@{variables('VideoIndexerAccount')}/Videos/@{triggerOutputs()['headers']['X-VideoId']}/AccessToken?allowEdit=true"
                            },
                            "runAfter": {
                                "Initialize_variable:_VideoIndexerKey": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "HTTP:_Update_transcript_on_VideoIndexer": {
                            "runAfter": {
                                "HTTP:_Get_token_from_VideoIndexer": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "body": "@triggerBody()",
                                "method": "PUT",
                                "uri": "[concat('https://api.videoindexer.ai/@{encodeUriComponent(variables(''VideoIndexerRegion''))}/Accounts/@{encodeUriComponent(variables(''VideoIndexerAccount''))}/Videos/@{triggerOutputs()[''headers''][''X-VideoId'']}/Index/Transcript?accessToken=@{body(''HTTP:_Get_token_from_VideoIndexer'')}&language=', parameters('language'), '&setAsSourceLanguage=true')]"
                            }
                        },
                        "Initialize_variable:_VideoIndexerAccount": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "VideoIndexerAccount",
                                        "type": "String",
                                        "value": "[parameters('videoindexeraccount')]"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable:_VideoIndexerRegion": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable:_VideoIndexerKey": {
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "VideoIndexerKey",
                                        "type": "String",
                                        "value": "[parameters('videoindexerkey')]"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable:_VideoIndexerAccount": [
                                    "Succeeded"
                                ]
                            }
                        },
                        "Initialize_variable:_VideoIndexerRegion": {
                        "inputs": {
                            "variables": [
                                {
                                    "name": "VideoIndexerRegion",
                                    "type": "String",
                                    "value": "[parameters('videoindexerregion')]"
                                }
                            ]
                        },
                        "runAfter": {},
                        "type": "InitializeVariable"
                    }
                    },
                    "outputs": {}
                },
                "parameters": {}
            },
            "dependsOn": []
        }
    ]
}